name: Build

on:
  workflow_call:
    inputs:
      hub_repo:
        description: 'Container registry repository'
        default: 'flighttrackr'
        required: false
        type: string
      hub_image:
        description: 'Container registry image name'
        required: true
        type: string
      image_authors:
        description: 'Docker image authors'
        default: 'Dennis Neufeld <git@dneufeld.net>'
        required: false
        type: string
      image_title:
        description: 'Docker image title'
        required: true
        type: string
      image_description:
        description: 'Docker image description'
        required: true
        type: string
      image_licenses:
        description: 'Docker image licenses'
        default: 'MIT'
        required: false
        type: string


env:
  HUB_REPO: ${{ inputs.hub_repo }}
  HUB_IMAGE: ${{ inputs.hub_image }}
  IMAGE_LABELS: |
    org.opencontainers.image.authors=${{ inputs.image_authors }}
    org.opencontainers.image.title=${{ inputs.image_title }}
    org.opencontainers.image.description=${{ inputs.image_description }}
    org.opencontainers.image.licenses=${{ inputs.image_licenses }}


jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    env:
      ARCHS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get upstream commit
        id: upstream
        run: |
          echo "::set-output name=remote::$(git config -f .gitmodules submodule.upstream.url)"
          echo "::set-output name=branch::$(git config -f .gitmodules submodule.upstream.branch)"
          echo "::set-output name=commit::$(git -C ./upstream/ rev-parse HEAD)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: ${{ env.ARCHS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.1.0

      - name: Set up Docker metadata
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ghcr.io/${{ env.HUB_REPO }}/${{ env.HUB_IMAGE }}
          tags: type=sha,format=long
          labels: ${{ env.IMAGE_LABELS }}

      - name: Build Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          platforms: ${{ env.ARCHS }}
          pull: true
          push: false
          build-args: |
            UPSTREAM_REMOTE=${{ steps.upstream.outputs.remote }}
            UPSTREAM_BRANCH=${{ steps.upstream.outputs.branch }}
            UPSTREAM_COMMIT=${{ steps.upstream.outputs.commit }}
          cache-from: type=gha,scope=main
          cache-to: type=gha,scope=main
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.label }}
